openapi: 3.0.3
x-stoplight:
  id: w5489y7e0abny
info:
  title: Duet Code API
  version: 1.0.0
  description: Duet Code API
  license:
    name: MIT License
    url: 'https://opensource.org/licenses/MIT'
servers:
  - url: 'http://localhost:3000'
    description: development
paths:
  /api/v1/users:
    post:
      summary: Login user
      operationId: login-user
      responses:
        '201':
          description: Created
        '422':
          description: Unprocessable Entity (WebDAV)
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/login-user'
            examples:
              example-1:
                value:
                  uid: 1n3ufRU0tcYYTdSO0BjSEUvKwsE1
                  github_access_token: gho_SjHbX2T06BwZhQPqk5DWk4zBYYoLL01YYU3X
                  name: daiki0381
                  avatar: 'https://avatars.githubusercontent.com'
      tags:
        - User
      parameters: []
      security:
        - JWT: []
  '/api/v1/users/{user_id}':
    parameters:
      - schema:
          type: number
        name: user_id
        in: path
        required: true
    get:
      summary: Get user
      operationId: get-user
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/user'
              examples:
                example-1:
                  value:
                    id: 1
                    uid: 1n3ufRU0tcYYTdSO0BjSEUvKwsE1
                    github_access_token: gho_SjHbX2T06BwZhQPqk5DWk4zBYYoLL01YYU3X
                    name: daiki0381
                    avatar: 'https://avatars.githubusercontent.com'
                    created_at: '2022-10-10T10::10'
                    updated_at: '2022-10-10T10::10'
      tags:
        - User
  /api/v1/current_user/id:
    get:
      summary: Get current user id
      tags:
        - User
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/current-user-id'
              examples:
                example-1:
                  value: 1
      operationId: get-current-user-id
      parameters: []
      security:
        - JWT: []
    parameters: []
  /api/v1/reviews:
    post:
      summary: Create review
      operationId: create-review
      responses:
        '201':
          description: Created
        '422':
          description: Unprocessable Entity (WebDAV)
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/create-review'
            examples:
              example-1:
                value:
                  title: Rubyのレビューをお願いします
                  pull_request_title: ruby-practices/ボウリングのスコア計算オブジェクト指向版
                  pull_request_url: 'https://github.com/daiki0381/ruby-practices/pull/1'
                  languages:
                    - Ruby
                  pull_request_description: ボウリングのスコア計算をオブジェクト指向プログラミングで書きました。
                  review_point: メソッド/変数の命名
      security:
        - JWT: []
      tags:
        - Review
    get:
      summary: Get reviews
      operationId: get-reviews
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                x-examples:
                  example-1:
                    - id: 1
                      reviewee: 1
                      reviewer: 2
                      title: Rubyのレビューをお願いします
                      pull_request: ruby-practices/ボウリングのスコア計算オブジェクト指向版
                      languages:
                        - Ruby
                      pull_request_description: ボウリングのスコア計算をオブジェクト指向プログラミングで書きました。
                      review_point: メソッド/変数の命名
                      feedback: 今回はありがとうございました。レビューした側もとても勉強になりました。また機会がありましたら、よろしくお願いします。
                      thanks: 今回はありがとうございました。ご丁寧にレビューして頂いたおかげで綺麗なコードが書けるようになりました。また機会がありましたら、よろしくお願いします。
                      done: true
                      created_at: '2022-10-10T10::10'
                      updated_at: '2022-10-10T10::10'
                type: array
                items:
                  $ref: '#/components/schemas/review'
              examples:
                example-1:
                  value:
                    - id: 1
                      reviewee: 1
                      reviewer: 2
                      title: Rubyのレビューをお願いします
                      pull_request_title: ruby-practices/ボウリングのスコア計算オブジェクト指向版
                      pull_request_url: 'https://github.com/daiki0381/ruby-practices/pull/1'
                      languages:
                        - Ruby
                      pull_request_description: ボウリングのスコア計算をオブジェクト指向プログラミングで書きました。
                      review_point: メソッド/変数の命名
                      feedback: 今回はありがとうございました。レビューした側もとても勉強になりました。また機会がありましたら、よろしくお願いします。
                      thanks: 今回はありがとうございました。ご丁寧にレビューして頂いたおかげで綺麗なコードが書けるようになりました。また機会がありましたら、よろしくお願いします。
                      accepted_at: '2022-10-22 17:00:00.000000'
                      created_at: '2022-10-10T10::10'
                      updated_at: '2022-10-10T10::10'
      tags:
        - Review
    parameters: []
  '/api/v1/reviews/{review_id}':
    parameters:
      - schema:
          type: string
        name: review_id
        in: path
        required: true
    delete:
      summary: Delete review post
      operationId: delete-review-post
      responses:
        '204':
          description: No Content
      tags:
        - Review
    patch:
      summary: Update review
      operationId: update-review
      responses:
        '200':
          description: OK
        '422':
          description: Unprocessable Entity (WebDAV)
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/update-review'
            examples:
              example-1:
                value:
                  title: Rubyのレビューをお願いします
                  pull_request_title: ruby-practices/ボウリングのスコア計算オブジェクト指向版
                  pull_request_url: 'https://github.com/daiki0381/ruby-practices/pull/1'
                  languages:
                    - Ruby
                  pull_request_description: ボウリングのスコア計算をオブジェクト指向プログラミングで書きました。
                  review_point: メソッド/変数の命名
                  feedback: 今回はありがとうございました。レビューした側もとても勉強になりました。また機会がありましたら、よろしくお願いします。
                  thanks: 今回はありがとうございました。ご丁寧にレビューして頂いたおかげで綺麗なコードが書けるようになりました。また機会がありましたら、よろしくお願いします。
                  accepted_at: '2022-10-22 17:00:00.000000'
      tags:
        - Review
    get:
      summary: Get review
      operationId: get-review
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/review'
              examples:
                example-1:
                  value:
                    id: 1
                    reviewee: 1
                    reviewer: 2
                    title: Rubyのレビューをお願いします
                    pull_request_title: ruby-practices/ボウリングのスコア計算オブジェクト指向版
                    pull_request_url: 'https://github.com/daiki0381/ruby-practices/pull/1'
                    languages:
                      - Ruby
                    pull_request_description: ボウリングのスコア計算をオブジェクト指向プログラミングで書きました。
                    review_point: メソッド/変数の命名
                    feedback: 今回はありがとうございました。レビューした側もとても勉強になりました。また機会がありましたら、よろしくお願いします。
                    thanks: 今回はありがとうございました。ご丁寧にレビューして頂いたおかげで綺麗なコードが書けるようになりました。また機会がありましたら、よろしくお願いします。
                    accepted_at: '2022-10-22 17:00:00.000000'
                    created_at: '2022-10-10T10::10'
                    updated_at: '2022-10-10T10::10'
      tags:
        - Review
  /api/v1/notifications:
    post:
      summary: Create notification
      operationId: create-notification
      responses:
        '201':
          description: Created
        '422':
          description: Unprocessable Entity (WebDAV)
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/create-notification'
            examples:
              example-1:
                value:
                  review_id: 1
                  user_id: 1
                  action: feedback
                  checked: true
      tags:
        - Notification
    get:
      summary: Get notifications
      operationId: get-notifications
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                x-examples:
                  example-1:
                    - id: 1
                      post_id: 1
                      action: feedback
                      checked: true
                      created_at: '2022-10-10T10::10'
                      updated_at: '2022-10-10T10::10'
                items:
                  $ref: '#/components/schemas/notification'
              examples:
                example-1:
                  value:
                    - id: 1
                      review_id: 1
                      user_id: 1
                      action: feedback
                      checked: true
                      created_at: '2022-10-10T10::10'
                      updated_at: '2022-10-10T10::10'
      tags:
        - Notification
  '/api/v1/notifications/{notification_id}':
    parameters:
      - schema:
          type: number
        name: notification_id
        in: path
        required: true
    patch:
      summary: Update notification
      operationId: update-notification
      responses:
        '200':
          description: OK
        '422':
          description: Unprocessable Entity (WebDAV)
      tags:
        - Notification
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/update-notification'
            examples:
              example-1:
                value:
                  checked: true
components:
  schemas:
    user:
      type: object
      x-examples:
        example-1:
          id: 1
          uid: 1n3ufRU0tcYYTdSO0BjSEUvKwsE1
          github_access_token: gho_SjHbX2T06BwZhQPqk5DWk4zBYYoLL01YYU3X
          name: daiki0381
          avatar: 'https://avatars.githubusercontent.com'
          created_at: '2022-10-10T10::10'
          updated_at: '2022-10-10T10::10'
      additionalProperties: false
      properties:
        id:
          type: integer
        uid:
          type: string
        github_access_token:
          type: string
        name:
          type: string
        avatar:
          type: string
        created_at:
          type: string
        updated_at:
          type: string
    current-user-id:
      title: current-user-id
      x-stoplight:
        id: s7frr9liju6td
      type: integer
      x-examples:
        example-1: 1
    login-user:
      type: object
      x-examples:
        example-1:
          uid: 1n3ufRU0tcYYTdSO0BjSEUvKwsE1
          github_access_token: gho_SjHbX2T06BwZhQPqk5DWk4zBYYoLL01YYU3X
          name: daiki0381
          avatar: 'https://avatars.githubusercontent.com'
      additionalProperties: false
      properties:
        uid:
          type: string
        github_access_token:
          type: string
        name:
          type: string
        avatar:
          type: string
      required:
        - uid
        - github_access_token
        - name
        - avatar
    review:
      type: object
      x-examples:
        example-1:
          id: 1
          reviewee: 1
          reviewer: 2
          title: Rubyのレビューをお願いします
          pull_request_title: ruby-practices/ボウリングのスコア計算オブジェクト指向版
          pull_request_url: 'https://github.com/daiki0381/ruby-practices/pull/1'
          languages:
            - Ruby
          pull_request_description: ボウリングのスコア計算をオブジェクト指向プログラミングで書きました。
          review_point: メソッド/変数の命名
          feedback: 今回はありがとうございました。レビューした側もとても勉強になりました。また機会がありましたら、よろしくお願いします。
          thanks: 今回はありがとうございました。ご丁寧にレビューして頂いたおかげで綺麗なコードが書けるようになりました。また機会がありましたら、よろしくお願いします。
          accepted_at: '2022-10-22 17:00:00.000000'
          created_at: '2022-10-10T10::10'
          updated_at: '2022-10-10T10::10'
      properties:
        id:
          type: integer
        reviewee:
          type: integer
        reviewer:
          type: integer
        title:
          type: string
        pull_request_title:
          type: string
        pull_request_url:
          type: string
        languages:
          type: array
          items:
            type: string
        pull_request_description:
          type: string
        review_point:
          type: string
        feedback:
          type: string
        thanks:
          type: string
        accepted_at:
          type: string
        created_at:
          type: string
        updated_at:
          type: string
    create-review:
      type: object
      x-examples:
        example-1:
          title: Rubyのレビューをお願いします
          pull_request_title: ruby-practices/ボウリングのスコア計算オブジェクト指向版
          pull_request_url: 'https://github.com/daiki0381/ruby-practices/pull/1'
          languages:
            - Ruby
          pull_request_description: ボウリングのスコア計算をオブジェクト指向プログラミングで書きました。
          review_point: メソッド/変数の命名
      properties:
        title:
          type: string
        pull_request_title:
          type: string
        pull_request_url:
          type: string
        languages:
          type: array
          items:
            type: string
        pull_request_description:
          type: string
        review_point:
          type: string
      required:
        - title
        - pull_request_title
        - pull_request_url
        - languages
        - pull_request_description
        - review_point
    update-review:
      type: object
      x-examples:
        example-1:
          title: Rubyのレビューをお願いします
          pull_request_title: ruby-practices/ボウリングのスコア計算オブジェクト指向版
          pull_request_url: 'https://github.com/daiki0381/ruby-practices/pull/1'
          languages:
            - Ruby
          pull_request_description: ボウリングのスコア計算をオブジェクト指向プログラミングで書きました。
          review_point: メソッド/変数の命名
          feedback: 今回はありがとうございました。レビューした側もとても勉強になりました。また機会がありましたら、よろしくお願いします。
          thanks: 今回はありがとうございました。ご丁寧にレビューして頂いたおかげで綺麗なコードが書けるようになりました。また機会がありましたら、よろしくお願いします。
          accepted_at: '2022-10-22 17:00:00.000000'
      properties:
        title:
          type: string
        pull_request_title:
          type: string
        pull_request_url:
          type: string
        languages:
          type: array
          items:
            type: string
        pull_request_description:
          type: string
        review_point:
          type: string
        feedback:
          type: string
        thanks:
          type: string
        accepted_at:
          type: string
    notification:
      type: object
      x-examples:
        example-1:
          id: 1
          review_id: 1
          user_id: 1
          action: feedback
          checked: true
          created_at: '2022-10-10T10::10'
          updated_at: '2022-10-10T10::10'
      properties:
        id:
          type: integer
        review_id:
          type: integer
        user_id:
          type: integer
        action:
          type: string
        checked:
          type: boolean
        created_at:
          type: string
        updated_at:
          type: string
    create-notification:
      type: object
      x-examples:
        example-1:
          review_id: 1
          user_id: 1
          action: feedback
          checked: true
      properties:
        review_id:
          type: integer
        user_id:
          type: integer
        action:
          type: string
        checked:
          type: boolean
      required:
        - review_id
        - user_id
        - action
        - checked
    update-notification:
      type: object
      x-examples:
        example-1:
          checked: true
      properties:
        checked:
          type: boolean
      additionalProperties: false
      required:
        - checked
  headers:
    link:
      example: '<https://api.github.com/resource?page=2>; rel="next", <https://api.github.com/resource?page=5>; rel="last"'
      schema:
        type: string
  parameters: {}
  responses: {}
  examples: {}
  securitySchemes:
    JWT:
      type: http
      scheme: bearer
tags:
  - name: User
  - name: Review
  - name: GitHub
